{"version":3,"sources":["pages/Login.js","pages/Dashboard.js","App.js","index.js"],"names":["logoUrlGreen","Login","_ref","authenticated","navigate","useNavigate","useEffect","React","createElement","className","style","backgroundImage","backgroundSize","height","id","src","alt","onClick","handleDiscordClick","window","location","href","FontAwesomeIcon","icon","faDiscord","size","color","Dashboard","user","onlineUsers","setOnlineUsers","useState","messages","setMessages","messageInput","setMessageInput","socketRef","useRef","token","document","cookie","replace","current","io","process","withCredentials","extraHeaders","Authorization","on","console","log","error","message","prevMessages","system","text","users","disconnect","map","msg","index","key","discordId","avatar","width","borderRadius","username","async","fetch","method","credentials","onlineUser","onSubmit","e","preventDefault","trim","emit","warn","type","placeholder","value","onChange","target","App","setAuthenticated","setUser","response","axios","get","status","data","checkAuthStatus","Routes","Route","path","element","ReactDOM","createRoot","getElementById","render","StrictMode","BrowserRouter"],"mappings":"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","file":"static/js/main.d0649baa.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/Login.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\n\nconst logoUrlGreen = \"/images/colorkit.svg\";\n\nfunction Login({ authenticated }) {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (authenticated) {\n      navigate(\"/dashboard\"); // Redirect to dashboard if already authenticated\n    }\n  }, [authenticated, navigate]);\n\n  const handleDiscordClick = () => {\n    window.location.href = `${process.env.REACT_APP_API_URL}/auth/discord`; // Use environment variable\n  };\n\n  return (\n    <div\n      className=\"login-container d-flex justify-content-center align-items-center\"\n      style={{\n        backgroundImage: `url(\"/images/login-bg.png\")`,\n        backgroundSize: \"cover\",\n        height: \"100vh\",\n      }}\n    >\n      <div className=\"login-window p-4 shadow-lg rounded bg-dark text-light col-12 col-md-6 col-lg-4\">\n        <img id=\"login-logo\" src={logoUrlGreen} alt=\"Konekt logo\" />\n        <h1>Konekt</h1>\n        <h2>Welcome back!</h2>\n        <hr />\n        <p>Continue with</p>\n        <div className=\"logos\">\n          <div className=\"logo\" onClick={handleDiscordClick}>\n            <FontAwesomeIcon icon={faDiscord} size=\"2x\" color=\"#191b1b\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { io } from \"socket.io-client\";\nimport \"../styles/Dashboard.css\";\n\nconst Dashboard = ({ authenticated, user }) => {\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [messageInput, setMessageInput] = useState(\"\");\n\n  const socketRef = useRef(null);\n\n  useEffect(() => {\n    if (authenticated && user) {\n      const token = document.cookie.replace(\n        /(?:(?:^|.*;\\s*)token\\s*=([^;]*).*$)|^.*$/,\n        \"$1\"\n      );\n\n      socketRef.current = io(process.env.REACT_APP_API_URL, {\n        withCredentials: true,\n        extraHeaders: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      socketRef.current.on(\"connect\", () => {\n        console.log(\"Connected to the Socket.IO server\");\n      });\n\n      socketRef.current.on(\"connect_error\", (error) => {\n        console.error(\"Connection error:\", error);\n      });\n\n      // Listen for incoming chat messages\n      socketRef.current.on(\"message\", (message) => {\n        console.log(\"Received a message from the server:\", message);\n        setMessages((prevMessages) => [...prevMessages, message]);\n      });\n\n      // Listen for a user connecting\n      socketRef.current.on(\"userConnected\", (message) => {\n        console.log(\"User connected:\", message);\n        setMessages((prevMessages) => [\n          ...prevMessages,\n          { system: true, text: message }, // Add system message\n        ]);\n      });\n\n      // Listen for a user disconnecting\n      socketRef.current.on(\"userDisconnected\", (message) => {\n        console.log(\"User disconnected:\", message);\n        setMessages((prevMessages) => [\n          ...prevMessages,\n          { system: true, text: message }, // Add system message\n        ]);\n      });\n\n      // Update the list of online users\n      socketRef.current.on(\"usersUpdate\", (users) => {\n        console.log(\"Received updated user list:\", users);\n        setOnlineUsers(users);\n      });\n\n      return () => {\n        console.log(\"Disconnecting from the Socket.IO server...\");\n        socketRef.current.disconnect();\n      };\n    }\n  }, [authenticated, user]);\n\n  const handleSendMessage = (e) => {\n    e.preventDefault();\n\n    if (!messageInput.trim()) {\n      console.warn(\"Message input is empty. Please enter a message.\");\n      return;\n    }\n\n    if (!authenticated) {\n      console.error(\"User is not authenticated. Cannot send message.\");\n      return;\n    }\n\n    if (!socketRef.current) {\n      console.error(\n        \"Socket connection is not established. Cannot send message.\"\n      );\n      return;\n    }\n\n    try {\n      console.log(\"Sending message:\", messageInput.trim());\n      socketRef.current.emit(\"message\", { text: messageInput.trim() });\n      setMessageInput(\"\"); // Clear the input field\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n    }\n  };\n\n  const handleLogout = async () => {\n    try {\n      console.log(\"Logging out...\");\n      await fetch(\"http://localhost:3000/auth/logout\", {\n        method: \"GET\",\n        credentials: \"include\",\n      });\n\n      console.log(\"Logout successful. Redirecting to login page.\");\n      window.location.href = \"/\";\n    } catch (error) {\n      console.error(\"Error logging out:\", error);\n    }\n  };\n\n  if (!authenticated || !user) {\n    return <p>Please log in to access the dashboard.</p>;\n  }\n\n  return (\n    <div className=\"dashboard container-fluid\">\n      <div className=\"row no-gutters\">\n        {/* Chatbox Left Side */}\n        <div className=\"col-md-9 d-flex flex-column\">\n          <div className=\"chatbox flex-grow-1 overflow-auto p-3\">\n            <div className=\"messages p-3\">\n              {messages.map((msg, index) => (\n                <div key={index}>\n                  {msg.system ? (\n                    <em style={{ color: \"gray\" }}>{msg.text}</em> // Display system messages\n                  ) : (\n                    <strong>\n                      <img\n                        className=\"chat-pfp\"\n                        src={`https://cdn.discordapp.com/avatars/${msg.user.discordId}/${msg.user.avatar}.png`}\n                        alt=\"User Avatar\"\n                        style={{ width: \"35px\", borderRadius: \"50%\" }}\n                      />\n                      <span style={{ color: \"aliceblue\" }}>\n                        {msg.user.username}:\n                      </span>{\" \"}\n                      {msg.text}\n                    </strong>\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"logout-btn\">\n          <button onClick={handleLogout}>Logout</button>\n        </div>\n\n        <div className=\"users-display\">\n          <h2>Connected Users:</h2>\n          <ul>\n            {onlineUsers.map((onlineUser, index) => (\n              <p key={index} style={{ color: \"aliceblue\" }}>\n                {onlineUser.username}\n              </p>\n            ))}\n          </ul>\n        </div>\n\n        {/* Input-container Right Side */}\n        <div className=\"input-container col-md-3 d-flex\">\n          <div className=\"p-3 d-flex flex-column justify-content-center flex-grow-1\">\n            <form className=\"text-form\" onSubmit={handleSendMessage}>\n              <input\n                type=\"text\"\n                className=\"form-control mb-2\"\n                placeholder=\"Enter Message\"\n                value={messageInput}\n                onChange={(e) => setMessageInput(e.target.value)}\n              />\n              <button className=\"send-btn btn btn-primary w-100\" type=\"submit\">\n                Send\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React, { useEffect, useState } from \"react\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Login from \"./pages/Login\";\nimport Dashboard from \"./pages/Dashboard\";\n\nconst App = () => {\n  const [authenticated, setAuthenticated] = useState(false);\n  const [user, setUser] = useState(null); // Store user info\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const checkAuthStatus = async () => {\n      try {\n        const response = await axios.get(\n          `${process.env.REACT_APP_API_URL}/auth/status`,\n          {\n            withCredentials: true, // Include cookies in the request\n          }\n        );\n\n        if (response.status === 200 && response.data.authenticated) {\n          setAuthenticated(true);\n          setUser(response.data.user); // Store user data\n          navigate(\"/dashboard\");\n        } else {\n          setAuthenticated(false);\n          setUser(null);\n          navigate(\"/\");\n        }\n      } catch (error) {\n        setAuthenticated(false);\n        setUser(null);\n        navigate(\"/\");\n      }\n    };\n\n    checkAuthStatus();\n  }, [navigate]);\n\n  return (\n    <div>\n      <Routes>\n        <Route path=\"/\" element={<Login authenticated={authenticated} />} />\n        <Route\n          path=\"/dashboard\"\n          element={<Dashboard authenticated={authenticated} user={user} />}\n        />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./styles/global.css\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}